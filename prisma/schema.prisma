// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Employee {
  id   Int    @id @default(autoincrement())
  code Int    @unique
  name String @db.VarChar(64)
  role String @db.VarChar(32)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Motorcycle {
  id    Int    @id @default(autoincrement())
  code  String @unique @db.VarChar(18)
  name  String @db.VarChar(64)
  price Float  @db.DoublePrecision

  creditApplications CreditApplication[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Creditor {
  id      Int    @id @default(autoincrement())
  name    String @db.VarChar(64)
  job     String @db.VarChar(64)
  phone   String @db.VarChar(13)
  address String @db.VarChar(128)

  creditApplications CreditApplication[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CreditApplication {
  id                Int   @id @default(autoincrement())
  creditorId        Int
  motorcycleId      Int
  downPayment       Float @db.DoublePrecision
  interestPerYear   Float
  installmentPeriod Int

  creditor   Creditor   @relation(fields: [creditorId], references: [id])
  motorcycle Motorcycle @relation(fields: [motorcycleId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
